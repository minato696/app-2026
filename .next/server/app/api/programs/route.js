/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/programs/route";
exports.ids = ["app/api/programs/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprograms%2Froute&page=%2Fapi%2Fprograms%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprograms%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprograms%2Froute&page=%2Fapi%2Fprograms%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprograms%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_USUARIO_Desktop_APP_EXITOSA2026_src_app_api_programs_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/programs/route.ts */ \"(rsc)/./src/app/api/programs/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/programs/route\",\n        pathname: \"/api/programs\",\n        filename: \"route\",\n        bundlePath: \"app/api/programs/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\USUARIO\\\\Desktop\\\\APP-EXITOSA2026\\\\src\\\\app\\\\api\\\\programs\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_USUARIO_Desktop_APP_EXITOSA2026_src_app_api_programs_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZwcm9ncmFtcyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGcHJvZ3JhbXMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZwcm9ncmFtcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNVU1VBUklPJTVDRGVza3RvcCU1Q0FQUC1FWElUT1NBMjAyNiU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDVVNVQVJJTyU1Q0Rlc2t0b3AlNUNBUFAtRVhJVE9TQTIwMjYmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQytCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxVU1VBUklPXFxcXERlc2t0b3BcXFxcQVBQLUVYSVRPU0EyMDI2XFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHByb2dyYW1zXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9ncmFtcy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2dyYW1zXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9wcm9ncmFtcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXFVTVUFSSU9cXFxcRGVza3RvcFxcXFxBUFAtRVhJVE9TQTIwMjZcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxccHJvZ3JhbXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprograms%2Froute&page=%2Fapi%2Fprograms%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprograms%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/programs/route.ts":
/*!***************************************!*\
  !*** ./src/app/api/programs/route.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_dataManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/dataManager */ \"(rsc)/./src/lib/dataManager.ts\");\n// src/app/api/programs/route.ts - CON CACHÉ COMPLETO\n\n\n// GET - Obtener programas\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const stationId = searchParams.get('stationId');\n        // Ambas funciones ya implementan caché internamente\n        const programs = stationId ? await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.getProgramsByStation)(stationId) : await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.getPrograms)();\n        console.log(`Programas encontrados: ${programs.length}${stationId ? ` para estación ${stationId}` : ''}`);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: programs,\n            _meta: {\n                cached: true,\n                count: programs.length,\n                stationId: stationId || 'all',\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            headers: {\n                // Headers de caché para el navegador\n                'Cache-Control': 'public, max-age=180, stale-while-revalidate=360',\n                'X-Content-Type-Options': 'nosniff',\n                'X-Frame-Options': 'DENY'\n            }\n        });\n    } catch (error) {\n        console.error('Error al obtener programas:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al obtener programas',\n            _meta: {\n                timestamp: new Date().toISOString()\n            }\n        }, {\n            status: 500\n        });\n    }\n}\n// POST - Crear nuevo programa\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        console.log('Creando nuevo programa:', body);\n        // Validación básica\n        const requiredFields = [\n            'station_id',\n            'name',\n            'host',\n            'start_time',\n            'end_time',\n            'days'\n        ];\n        const missingFields = requiredFields.filter((field)=>!body[field]);\n        if (missingFields.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: `Campos requeridos faltantes: ${missingFields.join(', ')}`\n            }, {\n                status: 400\n            });\n        }\n        // Validar formato de hora\n        const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n        if (!timeRegex.test(body.start_time) || !timeRegex.test(body.end_time)) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Formato de hora inválido. Use HH:MM'\n            }, {\n                status: 400\n            });\n        }\n        // Validar días\n        const validDays = [\n            'Lunes',\n            'Martes',\n            'Miércoles',\n            'Jueves',\n            'Viernes',\n            'Sábado',\n            'Domingo'\n        ];\n        const invalidDays = body.days.filter((day)=>!validDays.includes(day));\n        if (invalidDays.length > 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: `Días inválidos: ${invalidDays.join(', ')}`\n            }, {\n                status: 400\n            });\n        }\n        // createProgram invalida los cachés automáticamente\n        const program = await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.createProgram)(body);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: program,\n            _meta: {\n                action: 'created',\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al crear programa:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al crear programa'\n        }, {\n            status: 500\n        });\n    }\n}\n// PUT - Actualizar programa existente\nasync function PUT(request) {\n    try {\n        const body = await request.json();\n        console.log('Actualizando programa:', body);\n        const { id, ...updates } = body;\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'ID de programa requerido'\n            }, {\n                status: 400\n            });\n        }\n        // Validar campos si se están actualizando\n        if (updates.start_time || updates.end_time) {\n            const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n            if (updates.start_time && !timeRegex.test(updates.start_time)) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Formato de hora de inicio inválido. Use HH:MM'\n                }, {\n                    status: 400\n                });\n            }\n            if (updates.end_time && !timeRegex.test(updates.end_time)) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: 'Formato de hora de fin inválido. Use HH:MM'\n                }, {\n                    status: 400\n                });\n            }\n        }\n        if (updates.days) {\n            const validDays = [\n                'Lunes',\n                'Martes',\n                'Miércoles',\n                'Jueves',\n                'Viernes',\n                'Sábado',\n                'Domingo'\n            ];\n            const invalidDays = updates.days.filter((day)=>!validDays.includes(day));\n            if (invalidDays.length > 0) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: false,\n                    error: `Días inválidos: ${invalidDays.join(', ')}`\n                }, {\n                    status: 400\n                });\n            }\n        }\n        // updateProgram invalida los cachés automáticamente\n        const program = await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.updateProgram)(id, updates);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: program,\n            _meta: {\n                action: 'updated',\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al actualizar programa:', error);\n        // Manejo de errores específicos\n        if (error instanceof Error && error.message === 'Programa no encontrado') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Programa no encontrado'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al actualizar programa'\n        }, {\n            status: 500\n        });\n    }\n}\n// DELETE - Eliminar programa\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get('id');\n        console.log('Eliminando programa:', id);\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'ID de programa requerido'\n            }, {\n                status: 400\n            });\n        }\n        // deleteProgram invalida los cachés automáticamente\n        await (0,_lib_dataManager__WEBPACK_IMPORTED_MODULE_1__.deleteProgram)(id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            _meta: {\n                action: 'deleted',\n                deletedId: id,\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error('Error al eliminar programa:', error);\n        // Manejo de errores específicos\n        if (error instanceof Error && error.message === 'Programa no encontrado') {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Programa no encontrado'\n            }, {\n                status: 404\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Error al eliminar programa'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/programs/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/cache.ts":
/*!**************************!*\
  !*** ./src/lib/cache.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheManager: () => (/* binding */ cacheManager),\n/* harmony export */   currentProgramCache: () => (/* binding */ currentProgramCache),\n/* harmony export */   currentProgramCacheUtils: () => (/* binding */ currentProgramCacheUtils),\n/* harmony export */   imagesCache: () => (/* binding */ imagesCache),\n/* harmony export */   imagesCacheUtils: () => (/* binding */ imagesCacheUtils),\n/* harmony export */   programsCache: () => (/* binding */ programsCache),\n/* harmony export */   programsCacheUtils: () => (/* binding */ programsCacheUtils),\n/* harmony export */   stationsCache: () => (/* binding */ stationsCache),\n/* harmony export */   stationsCacheUtils: () => (/* binding */ stationsCacheUtils),\n/* harmony export */   warmUpCache: () => (/* binding */ warmUpCache)\n/* harmony export */ });\n/* harmony import */ var node_cache__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node-cache */ \"(rsc)/./node_modules/node-cache/index.js\");\n/* harmony import */ var node_cache__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_cache__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/cache.ts\n\n// Configuración de diferentes cachés con TTL específicos\nconst cacheConfig = {\n    // Datos que cambian poco frecuentemente\n    stations: {\n        stdTTL: 3600,\n        checkperiod: 600\n    },\n    programs: {\n        stdTTL: 1800,\n        checkperiod: 300\n    },\n    currentProgram: {\n        stdTTL: 60,\n        checkperiod: 30\n    },\n    images: {\n        stdTTL: 86400,\n        checkperiod: 3600\n    }\n};\n// Crear instancias de caché\nconst stationsCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.stations);\nconst programsCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.programs);\nconst currentProgramCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.currentProgram);\nconst imagesCache = new (node_cache__WEBPACK_IMPORTED_MODULE_0___default())(cacheConfig.images);\nclass CacheManager {\n    constructor(){\n        this.stats = new Map();\n        // Inicializar estadísticas\n        [\n            'stations',\n            'programs',\n            'currentProgram',\n            'images'\n        ].forEach((cache)=>{\n            this.stats.set(cache, {\n                hits: 0,\n                misses: 0,\n                sets: 0,\n                deletes: 0,\n                hitRate: 0\n            });\n        });\n        // Eventos de caché para estadísticas\n        this.setupCacheEvents();\n    }\n    setupCacheEvents() {\n        // Configurar eventos para cada caché\n        const caches = [\n            {\n                name: 'stations',\n                instance: stationsCache\n            },\n            {\n                name: 'programs',\n                instance: programsCache\n            },\n            {\n                name: 'currentProgram',\n                instance: currentProgramCache\n            },\n            {\n                name: 'images',\n                instance: imagesCache\n            }\n        ];\n        caches.forEach(({ name, instance })=>{\n            instance.on('hit', ()=>this.recordHit(name));\n            instance.on('miss', ()=>this.recordMiss(name));\n            instance.on('set', ()=>this.recordSet(name));\n            instance.on('del', ()=>this.recordDelete(name));\n        });\n    }\n    recordHit(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.hits++;\n        this.updateHitRate(cacheName);\n    }\n    recordMiss(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.misses++;\n        this.updateHitRate(cacheName);\n    }\n    recordSet(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.sets++;\n    }\n    recordDelete(cacheName) {\n        const stats = this.stats.get(cacheName);\n        stats.deletes++;\n    }\n    updateHitRate(cacheName) {\n        const stats = this.stats.get(cacheName);\n        const total = stats.hits + stats.misses;\n        stats.hitRate = total > 0 ? stats.hits / total * 100 : 0;\n    }\n    // Métodos públicos para obtener estadísticas\n    getStats(cacheName) {\n        if (cacheName) {\n            return this.stats.get(cacheName);\n        }\n        return this.stats;\n    }\n    // Limpiar todos los cachés\n    clearAll() {\n        stationsCache.flushAll();\n        programsCache.flushAll();\n        currentProgramCache.flushAll();\n        imagesCache.flushAll();\n        console.log('✅ Todos los cachés han sido limpiados');\n    }\n    // Obtener información de uso de memoria\n    getMemoryUsage() {\n        return {\n            stations: {\n                keys: stationsCache.keys().length,\n                size: JSON.stringify(stationsCache.data).length\n            },\n            programs: {\n                keys: programsCache.keys().length,\n                size: JSON.stringify(programsCache.data).length\n            },\n            currentProgram: {\n                keys: currentProgramCache.keys().length,\n                size: JSON.stringify(currentProgramCache.data).length\n            },\n            images: {\n                keys: imagesCache.keys().length,\n                size: JSON.stringify(imagesCache.data).length\n            }\n        };\n    }\n}\n// Instancia única del manager\nconst cacheManager = new CacheManager();\n// Funciones de caché específicas\n// Cache de estaciones\nconst stationsCacheUtils = {\n    get: (key)=>stationsCache.get(key),\n    set: (key, value, ttl)=>stationsCache.set(key, value, ttl || cacheConfig.stations.stdTTL),\n    del: (key)=>stationsCache.del(key),\n    has: (key)=>stationsCache.has(key),\n    flush: ()=>stationsCache.flushAll()\n};\n// Cache de programas\nconst programsCacheUtils = {\n    get: (key)=>programsCache.get(key),\n    set: (key, value, ttl)=>programsCache.set(key, value, ttl || cacheConfig.programs.stdTTL),\n    del: (key)=>programsCache.del(key),\n    has: (key)=>programsCache.has(key),\n    flush: ()=>programsCache.flushAll(),\n    // Método especial para invalidar programas de una estación\n    invalidateStation: (stationId)=>{\n        const keys = programsCache.keys();\n        keys.forEach((key)=>{\n            if (key.includes(stationId)) {\n                programsCache.del(key);\n            }\n        });\n    }\n};\n// Cache de programa actual\nconst currentProgramCacheUtils = {\n    get: (stationId)=>currentProgramCache.get(`current_${stationId}`),\n    set: (stationId, value)=>currentProgramCache.set(`current_${stationId}`, value),\n    del: (stationId)=>currentProgramCache.del(`current_${stationId}`),\n    has: (stationId)=>currentProgramCache.has(`current_${stationId}`),\n    flush: ()=>currentProgramCache.flushAll()\n};\n// Cache de imágenes procesadas\nconst imagesCacheUtils = {\n    get: (url)=>imagesCache.get(url),\n    set: (url, value, ttl)=>imagesCache.set(url, value, ttl || cacheConfig.images.stdTTL),\n    del: (url)=>imagesCache.del(url),\n    has: (url)=>imagesCache.has(url),\n    flush: ()=>imagesCache.flushAll()\n};\n// Función para precalentar el caché\nasync function warmUpCache() {\n    console.log('🔥 Calentando caché...');\n    try {\n        // Aquí puedes agregar lógica para precargar datos importantes\n        // Por ejemplo, cargar todas las estaciones\n        const { getStations } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./dataManager */ \"(rsc)/./src/lib/dataManager.ts\"));\n        const stations = await getStations();\n        stationsCacheUtils.set('all_stations', {\n            success: true,\n            data: stations\n        });\n        console.log('✅ Caché precalentado exitosamente');\n    } catch (error) {\n        console.error('❌ Error precalentando caché:', error);\n    }\n}\n// Exportar la instancia principal para uso directo si es necesario\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/cache.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/dataManager.ts":
/*!********************************!*\
  !*** ./src/lib/dataManager.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createProgram: () => (/* binding */ createProgram),\n/* harmony export */   createStation: () => (/* binding */ createStation),\n/* harmony export */   deleteProgram: () => (/* binding */ deleteProgram),\n/* harmony export */   deleteStation: () => (/* binding */ deleteStation),\n/* harmony export */   getCurrentProgram: () => (/* binding */ getCurrentProgram),\n/* harmony export */   getPrograms: () => (/* binding */ getPrograms),\n/* harmony export */   getProgramsByStation: () => (/* binding */ getProgramsByStation),\n/* harmony export */   getStations: () => (/* binding */ getStations),\n/* harmony export */   readData: () => (/* binding */ readData),\n/* harmony export */   updateProgram: () => (/* binding */ updateProgram),\n/* harmony export */   updateStation: () => (/* binding */ updateStation),\n/* harmony export */   writeData: () => (/* binding */ writeData)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _cache__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache */ \"(rsc)/./src/lib/cache.ts\");\n// src/lib/dataManager.ts - VERSIÓN COMPLETA CON CACHÉ\n\n\n\nconst DATA_FILE = path__WEBPACK_IMPORTED_MODULE_1___default().join(process.cwd(), 'data.json');\n// Cache para el archivo completo (5 minutos)\nlet fileCache = {\n    data: null,\n    timestamp: 0\n};\nconst FILE_CACHE_TTL = 5 * 60 * 1000; // 5 minutos\n// Función auxiliar para comparar horas en formato \"HH:MM\"\nfunction compareTimeStrings(time1, time2) {\n    const [hours1, minutes1] = time1.split(':').map(Number);\n    const [hours2, minutes2] = time2.split(':').map(Number);\n    if (hours1 !== hours2) {\n        return hours1 - hours2;\n    }\n    return minutes1 - minutes2;\n}\n// Función para ordenar programas por días y horario\nfunction sortPrograms(programs) {\n    // Orden de días de la semana (comenzando con Lunes)\n    const dayOrder = {\n        'Lunes': 0,\n        'Martes': 1,\n        'Miércoles': 2,\n        'Jueves': 3,\n        'Viernes': 4,\n        'Sábado': 5,\n        'Domingo': 6\n    };\n    return [\n        ...programs\n    ].sort((a, b)=>{\n        // Primero ordenar por el primer día de emisión\n        const firstDayA = a.days[0] || '';\n        const firstDayB = b.days[0] || '';\n        const dayComparison = dayOrder[firstDayA] - dayOrder[firstDayB];\n        if (dayComparison !== 0) {\n            return dayComparison;\n        }\n        // Si los días son iguales, ordenar por hora de inicio\n        return compareTimeStrings(a.start_time, b.start_time);\n    });\n}\n// Inicializar archivo de datos si no existe\nasync function initDataFile() {\n    try {\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().access(DATA_FILE);\n    } catch  {\n        const initialData = {\n            stations: [\n                {\n                    id: \"lima\",\n                    name: \"Lima\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.chiclayo\",\n                    image: \"/images/stations/1752245607379-f9si3p.jpg\",\n                    frequency: \"95.5 FM\",\n                    city: \"Lima, Perú\",\n                    description: \"La estación principal de Radio Exitosa en la capital del Perú\"\n                },\n                {\n                    id: \"arequipa\",\n                    name: \"Arequipa\",\n                    url: \"https://neptuno-3-audio.mediaserver.digital/e_arequipa\",\n                    image: \"/images/stations/1752245619584-g4ffj.jpg\",\n                    frequency: \"104.9 FM\",\n                    city: \"Arequipa, Perú\",\n                    description: \"Transmitiendo desde la Ciudad Blanca\"\n                },\n                {\n                    id: \"trujillo\",\n                    name: \"Trujillo\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.trujillo\",\n                    image: \"/images/stations/1752245627866-a2gt25.jpg\",\n                    frequency: \"103.3 FM\",\n                    city: \"Trujillo, Perú\",\n                    description: \"La voz de la Ciudad de la Eterna Primavera\"\n                },\n                {\n                    id: \"chiclayo\",\n                    name: \"Chiclayo\",\n                    url: \"https://radios-player-exitosa.mediaserver.digital/exitosa.chiclayo\",\n                    image: \"/images/stations/1752245634342-tow063.jpg\",\n                    frequency: \"98.9 FM\",\n                    city: \"Chiclayo, Perú\",\n                    description: \"Conectando con el norte del Perú\"\n                }\n            ],\n            programs: []\n        };\n        // Agregar todos los programas para cada estación\n        const weekdayPrograms = [\n            {\n                name: \"La Hora Esotérica\",\n                host: \"Soralla De Los Angeles\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"Usted Tiene Derecho\",\n                host: \"Mario Camacho Perla\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz De Los Pueblos\",\n                host: \"Jack Miranda y Marcial De La Cruz\",\n                start_time: \"02:00\",\n                end_time: \"05:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Pedro Paredes\",\n                start_time: \"05:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Hablemos Claro\",\n                host: \"Nicolás Lúcar\",\n                start_time: \"08:00\",\n                end_time: \"11:00\"\n            },\n            {\n                name: \"Exitosa Te Escucha\",\n                host: \"Katyusca Torres Aybar\",\n                start_time: \"11:00\",\n                end_time: \"14:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Gonzalo Núñez, Óscar Paz y Jean Rodríguez\",\n                start_time: \"14:00\",\n                end_time: \"16:00\"\n            },\n            {\n                name: \"Contra El Tráfico\",\n                host: \"Ricardo Rondón\",\n                start_time: \"16:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"Médicos En Acción\",\n                host: \"Armando Massé\",\n                start_time: \"18:00\",\n                end_time: \"19:00\"\n            },\n            {\n                name: \"Informamos y Opinamos\",\n                host: \"Karina Novoa\",\n                start_time: \"19:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Exitosa Noticias\",\n                host: \"Juriko Novoa\",\n                start_time: \"22:00\",\n                end_time: \"23:00\"\n            },\n            {\n                name: \"Despierta Tus Emociones\",\n                host: \"José Poicón\",\n                start_time: \"23:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        const saturdayPrograms = [\n            {\n                name: \"La Hora Esotérica\",\n                host: \"Esotéricos\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"Educando Mis Emociones\",\n                host: \"Dra. Danila Villegas\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz De Los Pueblos\",\n                host: \"Jack Miranda\",\n                start_time: \"02:00\",\n                end_time: \"05:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Pedro Paredes\",\n                start_time: \"05:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Hablemos Claro\",\n                host: \"Jesús Verde\",\n                start_time: \"08:00\",\n                end_time: \"11:00\"\n            },\n            {\n                name: \"Construyendo Cimientos Para El Futuro\",\n                host: \"Jose Cieza\",\n                start_time: \"11:00\",\n                end_time: \"12:00\"\n            },\n            {\n                name: \"Derrama Magisterial\",\n                host: \"Carlos Cornejo\",\n                start_time: \"12:00\",\n                end_time: \"13:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Óscar Paz\",\n                start_time: \"13:00\",\n                end_time: \"15:00\"\n            },\n            {\n                name: \"Exitosa Sábado\",\n                host: \"Katyusca Torres Aybar\",\n                start_time: \"15:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"La Hora Del Volante\",\n                host: \"Tito Alvites\",\n                start_time: \"18:00\",\n                end_time: \"20:00\"\n            },\n            {\n                name: \"Exitosa Te Escucha\",\n                host: \"Jorge Valdez\",\n                start_time: \"20:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"22:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        const sundayPrograms = [\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"00:00\",\n                end_time: \"01:00\"\n            },\n            {\n                name: \"La Voz de los Pueblos\",\n                host: \"Hierbero\",\n                start_time: \"01:00\",\n                end_time: \"02:00\"\n            },\n            {\n                name: \"La Voz de los Pueblos\",\n                host: \"Marcial de la Cruz\",\n                start_time: \"02:00\",\n                end_time: \"06:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Piura\",\n                start_time: \"06:00\",\n                end_time: \"07:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Cusco\",\n                start_time: \"07:00\",\n                end_time: \"08:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Arequipa\",\n                start_time: \"08:00\",\n                end_time: \"09:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Trujillo\",\n                start_time: \"09:00\",\n                end_time: \"10:00\"\n            },\n            {\n                name: \"En Defensa de la Verdad\",\n                host: \"Cecilia García\",\n                start_time: \"10:00\",\n                end_time: \"12:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Chiclayo\",\n                start_time: \"12:00\",\n                end_time: \"13:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Huancayo\",\n                start_time: \"13:00\",\n                end_time: \"14:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Huacho\",\n                start_time: \"14:00\",\n                end_time: \"15:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Ica\",\n                start_time: \"15:00\",\n                end_time: \"16:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Iquitos\",\n                start_time: \"16:00\",\n                end_time: \"17:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Tacna\",\n                start_time: \"17:00\",\n                end_time: \"18:00\"\n            },\n            {\n                name: \"Exitosa Perú\",\n                host: \"Tarapoto\",\n                start_time: \"18:00\",\n                end_time: \"19:00\"\n            },\n            {\n                name: \"Médicos en Acción\",\n                host: \"Daniel Bueno\",\n                start_time: \"19:00\",\n                end_time: \"21:00\"\n            },\n            {\n                name: \"Exitosa Deportes\",\n                host: \"Óscar Paz\",\n                start_time: \"21:00\",\n                end_time: \"22:00\"\n            },\n            {\n                name: \"Noche Esotérica\",\n                host: \"Vidente Hayimy\",\n                start_time: \"22:00\",\n                end_time: \"00:00\"\n            }\n        ];\n        let programId = 1;\n        // Para cada estación, agregar todos los programas\n        for (const station of initialData.stations){\n            // Programas de Lunes a Viernes\n            for (const program of weekdayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Lunes',\n                        'Martes',\n                        'Miércoles',\n                        'Jueves',\n                        'Viernes'\n                    ]\n                });\n                programId++;\n            }\n            // Programas de Sábado\n            for (const program of saturdayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Sábado'\n                    ]\n                });\n                programId++;\n            }\n            // Programas de Domingo\n            for (const program of sundayPrograms){\n                initialData.programs.push({\n                    id: programId.toString(),\n                    station_id: station.id,\n                    name: program.name,\n                    host: program.host,\n                    start_time: program.start_time,\n                    end_time: program.end_time,\n                    image: '',\n                    days: [\n                        'Domingo'\n                    ]\n                });\n                programId++;\n            }\n        }\n        // Ordenar los programas antes de guardarlos\n        initialData.programs = sortPrograms(initialData.programs);\n        await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DATA_FILE, JSON.stringify(initialData, null, 2));\n        console.log(`✅ Archivo data.json creado con ${initialData.programs.length} programas`);\n    }\n}\n// Leer datos con caché de archivo\nasync function readData() {\n    const now = Date.now();\n    // Verificar caché del archivo\n    if (fileCache.data && now - fileCache.timestamp < FILE_CACHE_TTL) {\n        console.log('📁 Datos servidos desde caché de archivo');\n        return fileCache.data;\n    }\n    console.log('📁 Leyendo datos desde archivo');\n    await initDataFile();\n    const data = await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(DATA_FILE, 'utf-8');\n    const parsed = JSON.parse(data);\n    // Actualizar caché\n    fileCache = {\n        data: parsed,\n        timestamp: now\n    };\n    return parsed;\n}\n// Escribir datos e invalidar cachés\nasync function writeData(data) {\n    await fs_promises__WEBPACK_IMPORTED_MODULE_0___default().writeFile(DATA_FILE, JSON.stringify(data, null, 2));\n    // Invalidar todos los cachés relacionados\n    fileCache = {\n        data: null,\n        timestamp: 0\n    };\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.flush();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.flush();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.flush();\n    console.log('💾 Datos guardados y cachés invalidados');\n}\n// Obtener todas las estaciones (con caché)\nasync function getStations() {\n    const cacheKey = 'all_stations';\n    // Intentar obtener del caché\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log('🎯 Estaciones servidas desde caché');\n        return cached;\n    }\n    // Si no está en caché, leer y cachear\n    const data = await readData();\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.set(cacheKey, data.stations);\n    return data.stations;\n}\n// Obtener todos los programas (con caché)\nasync function getPrograms() {\n    const cacheKey = 'all_programs';\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log('🎯 Programas servidos desde caché');\n        return cached;\n    }\n    const data = await readData();\n    const sortedPrograms = sortPrograms(data.programs);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.set(cacheKey, sortedPrograms);\n    return sortedPrograms;\n}\n// Obtener programas por estación (con caché)\nasync function getProgramsByStation(stationId) {\n    const cacheKey = `programs_station_${stationId}`;\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.get(cacheKey);\n    if (cached) {\n        console.log(`🎯 Programas de estación ${stationId} servidos desde caché`);\n        return cached;\n    }\n    const data = await readData();\n    const programs = data.programs.filter((p)=>p.station_id === stationId);\n    const sortedPrograms = sortPrograms(programs);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.set(cacheKey, sortedPrograms);\n    return sortedPrograms;\n}\n// Obtener programa actual (con caché corto)\nasync function getCurrentProgram(stationId) {\n    // Verificar caché primero\n    const cached = _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.get(stationId);\n    if (cached !== undefined) {\n        console.log(`🎯 Programa actual de ${stationId} servido desde caché`);\n        return cached;\n    }\n    const data = await readData();\n    // Obtener hora de Perú (UTC-5)\n    const now = new Date();\n    const utc = now.getTime() + now.getTimezoneOffset() * 60000;\n    const peruTime = new Date(utc + 3600000 * -5);\n    const currentHour = peruTime.getHours();\n    const currentMinute = peruTime.getMinutes();\n    const currentTimeMinutes = currentHour * 60 + currentMinute; // Minutos desde medianoche\n    const currentDay = [\n        'Domingo',\n        'Lunes',\n        'Martes',\n        'Miércoles',\n        'Jueves',\n        'Viernes',\n        'Sábado'\n    ][peruTime.getDay()];\n    const stationPrograms = data.programs.filter((p)=>p.station_id === stationId);\n    for (const program of stationPrograms){\n        if (!program.days.includes(currentDay)) continue;\n        // Convertir tiempos a minutos desde medianoche\n        const [startHour, startMin] = program.start_time.split(':').map(Number);\n        const [endHour, endMin] = program.end_time.split(':').map(Number);\n        const startMinutes = startHour * 60 + startMin;\n        let endMinutes = endHour * 60 + endMin;\n        // Si el programa termina a las 00:00, significa que termina a medianoche (1440 minutos)\n        if (endHour === 0 && endMin === 0 && startHour >= 12) {\n            endMinutes = 24 * 60; // 1440 minutos (medianoche)\n        }\n        // Caso 1: Programa normal (no cruza medianoche)\n        if (startMinutes < endMinutes) {\n            if (currentTimeMinutes >= startMinutes && currentTimeMinutes < endMinutes) {\n                _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                console.log(`💾 Programa actual de ${stationId} cacheado`);\n                return program;\n            }\n        } else if (startMinutes > endMinutes) {\n            // Si estamos después del inicio O antes del fin\n            if (currentTimeMinutes >= startMinutes || currentTimeMinutes < endMinutes) {\n                _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                console.log(`💾 Programa actual de ${stationId} cacheado`);\n                return program;\n            }\n        } else if (startMinutes === endMinutes) {\n            _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n            console.log(`💾 Programa actual de ${stationId} cacheado`);\n            return program; // Siempre activo\n        }\n    }\n    // Si no encontramos programa para el día actual, buscar el programa del día anterior que cruza medianoche\n    if (currentTimeMinutes < 360) {\n        const yesterdayIndex = peruTime.getDay() === 0 ? 6 : peruTime.getDay() - 1;\n        const yesterdayName = [\n            'Domingo',\n            'Lunes',\n            'Martes',\n            'Miércoles',\n            'Jueves',\n            'Viernes',\n            'Sábado'\n        ][yesterdayIndex];\n        for (const program of stationPrograms){\n            if (!program.days.includes(yesterdayName)) continue;\n            const [startHour, startMin] = program.start_time.split(':').map(Number);\n            const [endHour, endMin] = program.end_time.split(':').map(Number);\n            // Solo revisar programas que empiezan tarde (después de las 20:00)\n            if (startHour >= 20) {\n                const endMinutes = endHour * 60 + endMin;\n                // Si el programa del día anterior cruza a hoy\n                if (endHour < 12 && currentTimeMinutes < endMinutes) {\n                    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, program);\n                    console.log(`💾 Programa actual de ${stationId} cacheado`);\n                    return program;\n                }\n            }\n        }\n    }\n    // Cachear null también para evitar búsquedas repetidas\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.set(stationId, null);\n    console.log(`💾 Sin programa actual para ${stationId} - cacheado como null`);\n    return null;\n}\n// Crear programa\nasync function createProgram(program) {\n    const data = await readData();\n    const newProgram = {\n        ...program,\n        id: Date.now().toString()\n    };\n    // Agregar el nuevo programa\n    data.programs.push(newProgram);\n    // Ordenar programas antes de guardar\n    data.programs = sortPrograms(data.programs);\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${program.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(program.station_id);\n    return newProgram;\n}\n// Actualizar programa\nasync function updateProgram(id, updates) {\n    const data = await readData();\n    const index = data.programs.findIndex((p)=>p.id === id);\n    if (index === -1) throw new Error('Programa no encontrado');\n    const oldProgram = data.programs[index];\n    data.programs[index] = {\n        ...oldProgram,\n        ...updates\n    };\n    // Ordenar programas antes de guardar\n    data.programs = sortPrograms(data.programs);\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${oldProgram.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(oldProgram.station_id);\n    // Si cambió la estación, invalidar también la nueva\n    if (updates.station_id && updates.station_id !== oldProgram.station_id) {\n        _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${updates.station_id}`);\n        _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(updates.station_id);\n    }\n    return data.programs[index];\n}\n// Eliminar programa\nasync function deleteProgram(id) {\n    const data = await readData();\n    const program = data.programs.find((p)=>p.id === id);\n    if (!program) throw new Error('Programa no encontrado');\n    data.programs = data.programs.filter((p)=>p.id !== id);\n    await writeData(data);\n    // Invalidar cachés específicos\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${program.station_id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(program.station_id);\n}\n// Crear estación\nasync function createStation(stationData) {\n    const data = await readData();\n    const newStation = {\n        id: Date.now().toString(),\n        name: stationData.name || '',\n        url: stationData.url || '',\n        image: stationData.image,\n        frequency: stationData.frequency,\n        city: stationData.city,\n        description: stationData.description\n    };\n    data.stations.push(newStation);\n    await writeData(data);\n    // Invalidar caché de estaciones\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    return newStation;\n}\n// Actualizar estación\nasync function updateStation(id, updates) {\n    const data = await readData();\n    const index = data.stations.findIndex((s)=>s.id === id);\n    if (index === -1) throw new Error('Estación no encontrada');\n    data.stations[index] = {\n        ...data.stations[index],\n        ...updates\n    };\n    await writeData(data);\n    // Invalidar caché de estaciones\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    return data.stations[index];\n}\n// Eliminar estación\nasync function deleteStation(id) {\n    const data = await readData();\n    // Eliminar la estación\n    data.stations = data.stations.filter((s)=>s.id !== id);\n    // Eliminar todos los programas de esa estación\n    data.programs = data.programs.filter((p)=>p.station_id !== id);\n    await writeData(data);\n    // Invalidar todos los cachés relacionados\n    _cache__WEBPACK_IMPORTED_MODULE_2__.stationsCacheUtils.del('all_stations');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del('all_programs');\n    _cache__WEBPACK_IMPORTED_MODULE_2__.programsCacheUtils.del(`programs_station_${id}`);\n    _cache__WEBPACK_IMPORTED_MODULE_2__.currentProgramCacheUtils.del(id);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/dataManager.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/node-cache","vendor-chunks/clone"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fprograms%2Froute&page=%2Fapi%2Fprograms%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fprograms%2Froute.ts&appDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSUARIO%5CDesktop%5CAPP-EXITOSA2026&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();